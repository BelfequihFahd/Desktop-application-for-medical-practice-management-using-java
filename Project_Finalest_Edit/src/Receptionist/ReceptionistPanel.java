/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Receptionist;

import Login.loginPage;
import Doctors.connect;
import Admin.AdminPanel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GaXown
 */
public class ReceptionistPanel extends javax.swing.JFrame {
DefaultTableModel defaultTableModel = new DefaultTableModel();
DefaultTableModel deftmod = new DefaultTableModel();
Object docnames[] = new Object[1];
Object patientnames[] = new Object[1];
    /**
     * Creates new form ReceptionistPanel
     */
    public ReceptionistPanel() {
        initComponents();
        
         Object columns[] = {"app_date","id","name","age","gender","address","phone_number","disease"};
        defaultTableModel.setColumnIdentifiers(columns);
        patientTable.setModel(defaultTableModel);
        ///////////////////////////////////////////////////////////////////////////////////////:
        Object columns_D[] = {"id","name","gender","address","departement","phone_number"};
        deftmod.setColumnIdentifiers(columns_D);
        DoctorsTable.setModel(deftmod);
            try {
        loadData();
    } catch (ClassNotFoundException ex) {
        System.out.println("class not found");
    } catch (SQLException ex) {
        System.out.println("sql error");
    }
        
    }
    public void loadData() throws ClassNotFoundException, SQLException {
       Class.forName("com.mysql.jdbc.Driver");
   
         
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospitaldb","root","");
        defaultTableModel.getDataVector().removeAllElements();
        defaultTableModel.fireTableDataChanged();
        
        ////////////////////////////////////////////////
        
        deftmod.getDataVector().removeAllElements();
        deftmod.fireTableDataChanged();
        
        
        String querry = "select * from patient_info";
        String querry1 = "select * from doctor_info";
        
    
        try {
            java.sql.Statement s1 = con.createStatement();
            java.sql.Statement s2 = con.createStatement();
           ResultSet rs1 = s1.executeQuery(querry);
           ResultSet rs2 = s2.executeQuery(querry1);
            Object columnData[] = new Object[8];
            Object columnData1[] = new Object[6];
            
            while (rs1.next()) {
                columnData[0] = rs1.getString("date");
                columnData[1] = rs1.getString("id");
                columnData[2] = rs1.getString("name");
                columnData[3] = rs1.getInt("age");
                columnData[4] = rs1.getString("gender");
                columnData[5] = rs1.getString("address");
                columnData[6] = rs1.getString("phone");
                columnData[7] = rs1.getString("disease");
                
                
                
               
                defaultTableModel.addRow(columnData);
            }
            
            while (rs2.next()) {
                columnData1[0] = rs2.getString("id");
            columnData1[1] = rs2.getString("name");
            columnData1[2] = rs2.getString("gender");
            columnData1[3] = rs2.getString("address");
            columnData1[4] = rs2.getString("dept");
            columnData1[5] = rs2.getString("phone");
            
               
                deftmod.addRow(columnData1);
            }     
        } catch (SQLException e) {
            System.out.println("sql error");
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        p_name = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DoctorsTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        d_name = new javax.swing.JTextField();
        back_btn = new javax.swing.JLabel();
        logOut_Btn2 = new javax.swing.JLabel();
        add_appointement_btn = new javax.swing.JButton();
        date_filed = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        room_field = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Corbel", 2, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Doctor Full Name");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 167, 30));

        p_name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));
        jPanel1.add(p_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 210, 270, 30));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Corbel", 2, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Patient Full Name");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 161, 30));

        DoctorsTable.setAutoCreateRowSorter(true);
        DoctorsTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        DoctorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor_ID", "Doctor_Name", "Doctor_Specialization", "Doctor_phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DoctorsTable.setGridColor(new java.awt.Color(204, 204, 204));
        DoctorsTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(DoctorsTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 78, 1130, 114));

        patientTable.setAutoCreateRowSorter(true);
        patientTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Phone", "Patient Adress", "Patient Disease", "Patient Gender", "Patient Age", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setGridColor(new java.awt.Color(204, 204, 204));
        patientTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(patientTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 1124, 118));

        d_name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));
        jPanel1.add(d_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 40, 270, 30));

        back_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/backs.png"))); // NOI18N
        back_btn.setText("jLabel2");
        back_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_btnMouseClicked(evt);
            }
        });
        jPanel1.add(back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 50, 50));

        logOut_Btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cross.png"))); // NOI18N
        logOut_Btn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOut_Btn2logOut_BtnMouseClicked(evt);
            }
        });
        jPanel1.add(logOut_Btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        add_appointement_btn.setBackground(new java.awt.Color(255, 255, 255));
        add_appointement_btn.setFont(new java.awt.Font("Calibri", 2, 18)); // NOI18N
        add_appointement_btn.setForeground(new java.awt.Color(108, 99, 255));
        add_appointement_btn.setText("ADD Appointement");
        add_appointement_btn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(108, 99, 255)));
        add_appointement_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_appointement_btnActionPerformed(evt);
            }
        });

        date_filed.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));
        date_filed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date_filedActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Corbel", 2, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Date ");

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Corbel", 2, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Room");

        room_field.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1136, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_appointement_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(date_filed, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(room_field, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(room_field, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(date_filed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(15, 15, 15)
                .addComponent(add_appointement_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_appointement_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_appointement_btnActionPerformed
    try {
        // TODO add your handling code here:
         Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospitaldb","root","");
        
        String doc_name = d_name.getText();
        String pat_name = p_name.getText();
        int room = Integer.parseInt(room_field.getText());
        String date = date_filed.getText();
        
       
        String query3="select name from patient_info";
         java.sql.Statement s3 = con.createStatement();
         ResultSet rs3 = s3.executeQuery(query3);
         boolean pat_notfound=true;
         while(rs3.next()){
             if(pat_name.equals(rs3.getString("name"))){
                  pat_notfound=false;
                 break;
             }else{
                 pat_notfound=true;
             }
         }
         
         
        String query4="select name from doctor_info";
         java.sql.Statement s4 = con.createStatement();
         ResultSet rs4 = s4.executeQuery(query4);
         boolean doc_notfound=true;
         while(rs4.next()){
             if(doc_name.equals(rs4.getString("name"))){
                 doc_notfound=false;
                 break;
             }else{
                 doc_notfound=true;
             }
         }
        
        if(doc_notfound==true ){
            JOptionPane.showMessageDialog(null, doc_name+" not exisit!!!");
        }
        if(pat_notfound==true ){
            JOptionPane.showMessageDialog(null, pat_name+" not exisit!!!");
        }
        
        if(doc_notfound==false && pat_notfound==false){
            Connection cn;
            cn = connect.connectdb();
            String querry2 = "insert into appointment_info values(?,?,?,?)";
            java.sql.PreparedStatement st = cn.prepareStatement(querry2);
            st.setString(1, doc_name);
            st.setString(2, pat_name);
            st.setInt(3, room);
            st.setString(4, date);
            int x = st.executeUpdate();

            JOptionPane.showMessageDialog(null, "Appointement added"); 
        }
        
        
        
          
        
        
        
    } catch (ClassNotFoundException ex) {
        System.out.println("class error");
    } catch (SQLException ex) {
        System.out.println("sql error");
    }
        
    }//GEN-LAST:event_add_appointement_btnActionPerformed

    private void back_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_btnMouseClicked
        new Appointements().setVisible(true);
        dispose();
    }//GEN-LAST:event_back_btnMouseClicked

    private void date_filedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date_filedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_date_filedActionPerformed

    private void logOut_Btn2logOut_BtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOut_Btn2logOut_BtnMouseClicked
        new loginPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_logOut_Btn2logOut_BtnMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorsTable;
    private javax.swing.JButton add_appointement_btn;
    private javax.swing.JLabel back_btn;
    private javax.swing.JTextField d_name;
    private javax.swing.JTextField date_filed;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel logOut_Btn2;
    private javax.swing.JTextField p_name;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField room_field;
    // End of variables declaration//GEN-END:variables
}
